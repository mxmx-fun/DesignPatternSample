// Visitor Pattern(访问者模式)
// 访问者模式是一种行为型模式，它表示一个作用于某对象结构中的各元素的操作。
// 它可以使你在不改变各元素的类的前提下定义作用于这些元素的新操作。

// 举个例子，现在有个机器人要升级硬件
// 机器人有CPU，内存硬件
// 升级CPU，硬盘硬件的时候，应当通过外部传入的安装包来升级CPU和硬件。而不是CPU和硬件本身能升级。
// 这样就可以将CPU和硬盘硬件的升级逻辑放在外部，而不是CPU和硬盘硬件本身。升级的时候就通过升级访问者类去访问不同的硬件类达到升级的目的。

//总结：
//优点：访问者模式避免类臃肿，将一些方法抽象出来，放在访问者类中。有着更高的灵活性。
//缺点：访问者多封装了一层，增加了系统的复杂度。
//个人理解：将类划分的很干净，每个类只做一件事情，这样就会有很多类，但是每个类都很简单，很容易维护。

