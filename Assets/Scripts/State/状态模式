// State Pattern(状态模式)
// 状态模式主要是为了解决大量的if else判断，将各个状态的逻辑分离出来，降低耦合度。

// 举个例子，现在有个交通灯，有红灯，黄灯，绿灯三种状态。
// 如果不用状态模式，就是if else判断，每个状态的逻辑都在一起，不好维护。
// 而状态模式，则是将每个状态的逻辑分离出来，每个状态都是一个类，这样就可以很好的维护了。

//总结：
//优点：状态模式可以避免大量的if和else，并且不会随着状态增加而去修改所有状态所对应的逻辑。
//缺点：Debug的时候，不好找到具体的状态所对应的逻辑。并且后期状态增加会造成类爆炸。