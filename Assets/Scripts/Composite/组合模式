// Composite Pattern(组合模式)
// 用于子父物体的组合，使得子父物体的使用具有一致性。
// 外部不需要知道子父物体的具体类型，只需要知道子父物体的共同接口即可完成所有物体的功能调用。

//举个例子，角色的战斗力计算，角色的战斗力由角色的基础战斗力和装备的战斗力组成。或者有坐骑加成，或者有宠物加成。
//如果不使用组合模式，那么就需要在计算战斗力的地方，根据角色是否有坐骑，是否有宠物，是否有装备，进行不同的计算。
//使用了组合模式，就可以在角色类添加一个类似树形结构的数据结构，将角色的基础战斗力、装备、坐骑、宠物等都添加到这个数据结构中。
//当计算战斗力的时候，只需要遍历这个数据结构，将所有的战斗力加起来即可。

//总结:
//优点：组合模式是一个系统里子父物体组合解耦的一种设计模式。
//缺点：组合模式会造成组合类的爆炸，并且组合类会变得非常复杂。
//个人理解：游戏里的子父物体组合
