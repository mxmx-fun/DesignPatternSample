// Factory Pattern(工厂模式)
// 用于创建对象，将创建对象的过程进行封装，使得对象的创建和使用分离。
// 工厂模式分为简单工厂模式、工厂方法模式、抽象工厂模式。

//举个例子，角色生成器，根据不同的角色类型，生成不同的角色。
//如果不使用工厂模式，那么就需要在生成角色的地方，根据不同的角色类型，生成不同的角色。
//而使用工厂模式，就可以将生成角色的过程进行封装，使得生成角色的过程和使用角色的过程分离。

//总结:
//优点：工厂模式是一个系统里对象创建解耦的一种设计模式。
//缺点：工厂模式会造成工厂类的爆炸，并且工厂类会变得非常复杂。
//个人理解：游戏里的生成工厂
