// Decorator Pattern (装饰模式)
// 主要在不改变原有对象的基础上，对其进行扩展。常用于已上线的项目，需要增加新的功能，但是又不想改变原有的代码。

// 举个例子，NPC之前的行为只有走路。现在策划想让它保持走路的行为上，增加打招呼和睡觉的行为。
// 如果不用装饰模式，那么就需要修改原有的NPC类，在角色行为接口上增加打招呼和睡觉的方法。
// 而装饰模式，就好像给NPC套上了一层外衣，不改变原有的NPC类，就可以增加新的功能。

//总结:
//优点：不会修改到原有代码，符合开闭原则。易于拓展和维护。
//缺点：不断地装饰，会造成代码阅读困难。
//个人理解：已上线的项目使用，增加新的功能，不改变原有的代码。